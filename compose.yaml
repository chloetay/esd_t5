version: '3.9'

services:
  course:
    build:
      context: ./backend/Course
      dockerfile: Dockerfile
    container_name: course
    ports:
      - "5000:5000"
    environment:
      - dbURL=mysql+mysqlconnector://is213:password@mysql:3306/course
    depends_on:
      - mysql
    networks:
      - learning-network

  course-logs:
    build:
      context: ./backend/CourseLogs
      dockerfile: Dockerfile
    container_name: course-logs
    ports:
      - "5003:5003"
    depends_on:
      - mysql
    environment:
      - dbURL=mysql+mysqlconnector://is213:password@mysql:3306/course
    networks:
      - learning-network

  enroll-log:
    build:
      context: ./backend/EnrollLog
      dockerfile: Dockerfile
    container_name: enroll-log
    ports:
      - "3000:3000"
    depends_on:
      - pgdb
      - rabbitmq
    environment:
      - DB_HOST=pgdb
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=Password123!
      - DB_NAME=enrolllog
      - RABBITMQ_URL=amqp://rabbitmq
    networks:
      - learning-network
    restart: always

  enroll:
    build:
      context: ./backend/Enroll
      dockerfile: Dockerfile
    container_name: enroll
    ports:
      - "5002:5002"
    depends_on:
      - course
      - enroll-log
    networks:
      - learning-network

  # quiz:
  #   build:
  #     context: ./backend/Quiz
  #     dockerfile: quiz.Dockerfile
  #   container_name: quiz
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - db_password=NewSecurePassword123  
  #   restart: always 

  pgdb:
    image: postgres
    container_name: pgdb
    environment:
      POSTGRES_DB: enrolllog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123!
    ports:
      - "5433:5432"
    networks:
      - learning-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - learning-network

  mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: course
      MYSQL_USER: is213
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - ./backend/Course/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/Course/db:/docker-entrypoint-initdb.d
      - ./backend/CourseLogs/db:/docker-entrypoint-initdb.d
    networks:
      - learning-network

  # takecourse:
  #   build:
  #     context: ./takecourse
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5001:5001"
  #   environment:
  #     - COURSE_SERVICE_URL=http://course:5000
  #     - COURSE_LOGS_URL=http://course-logs:5003
  #     - QUIZ_SERVICE_URL=http://quiz:8000
  #     - FLASK_ENV=production
  #   depends_on:
  #     - course
  #     - course-logs
  #     - quiz
  #   networks:
  #     - learning-network
  enroll-error:
    build:
      context: ./backend/EnrollError
      dockerfile: Dockerfile
    container_name: enroll-error
    ports:
      - "5004:5004"
    depends_on:
      - enroll-log
    networks:
      - learning-network



networks:
  learning-network: